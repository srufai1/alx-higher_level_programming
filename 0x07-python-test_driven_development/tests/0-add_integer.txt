=============================
The ```add_integer``` module
=============================

Using ```add```
-----------------------------
This is a function that adds 2 integers.
	
	prototype: def add_integer(a, b=98):
	a and b must be integers or floats, otherwise raise a TypeError exception
	with the message "a must be an integer or b must be an integer"
	a and b must be first casted to integers if they are float
	Returns an integer: the addition of a and b
	You are not allowed to import any module

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("School", 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(0.1, 0.2)
0

>>> add_integer(-1, -3)
-4

>>> add_integer(999999999, 1)
1000000000

>>> add_integer("3", 5)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(3, "5")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("3", "5")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("inf", 10)
Traceback (most recent call last):
...
TypeError: a must be an integer